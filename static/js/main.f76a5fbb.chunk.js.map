{"version":3,"sources":["logo.svg","utils/api.js","components/search/index.js","components/table/index.js","pages/home.js","App.js","reportWebVitals.js","index.js"],"names":["axios","get","Search","props","className","htmlFor","onChange","handleInputChange","value","search","name","type","placeholder","id","onClick","handleFormSubmit","Table","scope","employees","length","map","employee","src","picture","thumbnail","alt","first","last","phone","email","Home","searchEmployee","filter","console","log","filteredList","state","Object","values","join","toLowerCase","indexOf","setState","event","target","preventDefault","api","then","data","results","this","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAAe,I,8DCEA,EACM,WACb,OAAOA,IAAMC,IAAI,2CCuBVC,MAxBf,SAAgBC,GACZ,OACI,mCACI,+BACI,sBAAKC,UAAU,aAAf,UACI,uBAAOC,QAAQ,SAAf,qCACA,uBACIC,SAAUH,EAAMI,kBAChBC,MAAOL,EAAMM,OACbC,KAAK,SACLC,KAAK,OACLP,UAAU,eACVQ,YAAY,4DACZC,GAAG,WAEP,wBAAQC,QAASX,EAAMY,iBAAkBX,UAAU,uBAAnD,4BC2BLY,MA3Cf,SAAeb,GACX,OACI,wBAAOC,UAAU,QAAjB,UACI,gCACI,+BACI,oBAAIa,MAAM,MAAV,qBACA,oBAAIA,MAAM,MAAV,wBAGA,oBAAIA,MAAM,MAAV,uBACA,oBAAIA,MAAM,MAAV,0BACA,oBAAIA,MAAM,MAAV,wBAGR,gCAEQd,EAAMe,UAAUC,OAAS,EACzBhB,EAAMe,UAAUE,KAAI,SAAAC,GAChB,OACI,+BACA,oBAAIJ,MAAM,MAAV,SAAgB,qBAAKK,IAAKD,EAASE,QAAQC,UAAWC,IAAI,wBAC9D,6BAAKJ,EAASX,KAAKgB,QACnB,6BAAKL,EAASX,KAAKiB,OACnB,6BAAKN,EAASO,QACd,6BAAKP,EAASQ,cAKd,+BACA,oBAAIZ,MAAM,QACV,uBACA,uBACA,uBACA,gCCqCTa,E,kDAnEX,WAAY3B,GAAQ,IAAD,8BACf,cAAMA,IAsBV4B,eAAiB,SAACC,GACdC,QAAQC,IAAI,SAAUF,GACtB,IAAMG,EAAe,EAAKC,MAAMlB,UAAUc,QAAO,SAACX,GAG9C,OAAiD,IADpCgB,OAAOC,OAAOjB,GAAUkB,KAAK,IAAIC,cAChCC,QAAQT,EAAOQ,kBAGjC,EAAKE,SAAS,CAAExB,UAAWiB,KA/BZ,EAkCnB5B,kBAAoB,SAAAoC,GAChB,IAAMjC,EAAOiC,EAAMC,OAAOlC,KACpBF,EAAQmC,EAAMC,OAAOpC,MAC3B,EAAKkC,SAAL,eACKhC,EAAOF,KAtCG,EA0CnBO,iBAAmB,SAAA4B,GACfA,EAAME,iBACN,EAAKd,eAAe,EAAKK,MAAM3B,SA1C/B,EAAK2B,MAAQ,CACTlB,UAAW,GACXT,OAAQ,IAJG,E,gEAeE,IAAD,OAChBqC,IAAsBC,MAAK,SAAA7B,GACvB,EAAKwB,SAAS,CACVxB,UAAWA,EAAU8B,KAAKC,e,+BA+BlC,OACI,qCAEI,cAAC,EAAD,CACIzC,MAAO0C,KAAKd,MAAM3B,OAClBM,iBAAkBmC,KAAKnC,iBACvBR,kBAAmB2C,KAAK3C,oBAG5B,cAAC,EAAD,CACIW,UAAWgC,KAAKd,MAAMlB,mB,GA5DvBiC,IAAMC,WCKVC,MANf,WACE,OACE,cAAC,EAAD,KCMWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f76a5fbb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import axios from \"axios\";\n\nexport default {\n    getRandomPeople: function() {\n        return axios.get(\"https://randomuser.me/api/?results=100\")\n    }\n}","import React from \"react\";\n// import Table from \"../table/index\"\n\nfunction Search(props) {\n    return (\n        <>\n            <form>\n                <div className=\"form-group\">\n                    <label htmlFor=\"search\">Search for an Employee:</label>\n                    <input\n                        onChange={props.handleInputChange}\n                        value={props.search}\n                        name=\"search\"\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Type in the employee's first or last name to get started!\"\n                        id=\"search\"\n                    />\n                    <button onClick={props.handleFormSubmit} className=\"btn btn-primary mt-3\">\n                        Search\n        </button>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default Search;","import React from \"react\";\n\nfunction Table(props) {\n    return (\n        <table className=\"table\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">Picture</th>\n                    <th scope=\"col\">\n                        First Name\n                        </th>\n                    <th scope=\"col\">Last Name</th>\n                    <th scope=\"col\">Phone Number</th>\n                    <th scope=\"col\">Email</th>\n                </tr>\n            </thead>\n            <tbody>\n                {\n                    props.employees.length > 0?\n                    props.employees.map(employee => {\n                        return(\n                            <tr>\n                            <th scope=\"row\"><img src={employee.picture.thumbnail} alt=\"employee portrait\"/></th>\n                        <td>{employee.name.first}</td>\n                        <td>{employee.name.last}</td>\n                        <td>{employee.phone}</td>\n                        <td>{employee.email}</td>\n                        </tr>\n                        )\n                    }) :\n                    (\n                        <tr>\n                        <th scope=\"row\"></th>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                    </tr>\n                    )\n                }\n               \n            </tbody>\n        </table>\n    )\n}\nexport default Table;","import React, { Component } from \"react\";\nimport api from \"../utils/api\";\nimport Search from \"../components/search\";\nimport Table from \"../components/table\";\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            employees: [],\n            search: \"\",\n        }\n        // this.sortBy = this.sortBy.bind(this)\n    };\n\n    // sortBy(key) {\n    //     this.setState({\n    //         employees: Table.sort((a, b) => a < b)\n    //     })\n    // }\n\n    componentDidMount() {\n        api.getRandomPeople().then(employees => {\n            this.setState({\n                employees: employees.data.results\n            })\n        })\n    };\n\n    searchEmployee = (filter) => {\n        console.log('Search', filter);\n        const filteredList = this.state.employees.filter((employee) => {\n            // merge data together, then check to see if employee exists\n            let values = Object.values(employee).join('').toLowerCase();\n            return values.indexOf(filter.toLowerCase()) !== -1;\n        });\n        // Update the employee list with the filtered value\n        this.setState({ employees: filteredList });\n    };\n\n    handleInputChange = event => {\n        const name = event.target.name;\n        const value = event.target.value;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    handleFormSubmit = event => {\n        event.preventDefault();\n        this.searchEmployee(this.state.search);\n    };\n\n\n    render() {\n        return (\n            <>\n\n                <Search\n                    value={this.state.search}\n                    handleFormSubmit={this.handleFormSubmit}\n                    handleInputChange={this.handleInputChange}\n                />\n\n                <Table\n                    employees={this.state.employees}\n                    // sortBy={sortBy}\n                />\n            </>\n\n        )\n    }\n}\nexport default Home;","import logo from './logo.svg';\nimport './App.css';\nimport Home from \"./pages/home\";\n\nfunction App() {\n  return (\n    <Home/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}